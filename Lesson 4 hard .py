# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
import random

matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]

# Выполнить поворот (транспонирование) матрицы



# Суть сложности hard: Решите задачу в одну строку
print("Исходная матрица = ",matrix)
print("Транспонированная матрица =",list(map(list,zip(*matrix))))

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
'''number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""
'''
# для проверки разкоментить строку и обрезку , закоментить мой генератор
number=''.join(str(random.randint(0, 9)) for x in range(1000))

def maxvolume(string):
    current = 1
    for _item in string:
        current *= int(_item)
    return current

#number = number.replace("\n", "") #заменим переходы на ничего

max = 0
startindex = 0
i = 0

while i < len(number):
    value = maxvolume(number[i:i + 5])
    if value > max:
        max = value
        startindex = i
    i += 1
print(f"Максимальное значение умножения 5ти последовательных элементов {max} позиция {startindex} сама последовательность {number[startindex:startindex+5]}")



# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

print ("Введите расстановку 8 ферзей на доске 8x8")



def prnt(list):  # Вывод для понятливости того, что ты ввел и преобразование в массив из списков
    k = 0
    pointmass=[]
    for f in range(8):
        print(f"точка {spk[f]}  [{list[k]}].[{list[k + 1]}]")
        pointmass.append([list[k],list[k + 1]])
        k += 2
    return pointmass

def createPoint():  # функция для создания списка координат, который введет пользователь
    listNew = []
    for f in range(16):
        print("Введите ", f + 1, "ю координату ")
        s = int(input())
        listNew.append(s)
    pointmass=prnt(listNew)
    return (pointmass)

#spk = ['F1', 'F2', 'F3', 'F4','F5','F6','F7','F8']

#mass = createPoint()

mass = [[3, 1], [5, 2], [8, 3], [4, 4], [1, 5], [7, 6], [2, 7], [6, 8]]# верный ряд, поменять любую цифру, чтоюы получить нет
# разблокировать, чтобы не вводить
#print(mass)

def horizontal(mass, row):
    tempmass = mass.copy()
    tempmass.remove(row)
    for ch  in tempmass:
        if row[0] == ch[0]:
            print("NO")
            exit()
        if row[1] == ch[1]:
            print("NO")
            exit()
def diagonal(mass,row):
    i=0
    j=0
    tempmass = mass.copy()
    tempmass.remove(row)
    for ch in tempmass:
        if (8-ch[0]+i) !=0 or (8-ch[1]+j)!=0:
            if row[0] == ch[0]+i:
                print("NO")
                exit()
            if row[1] == ch[1]+j:
                print("NO")
                exit()
            i+=i
            j+=j
    i = 0
    j = 0
    for ch in tempmass:
        if (8 - ch[0] - i) != 8 or (8 - ch[1] - j) != 8:
            if row[0] == ch[0]-i:
                print("NO")
                exit()
            if row[1] == ch[1]-j:
                print("NO")
                exit()
            i+=i
            j+=j
    i = 0
    j = 0
    for ch in tempmass:
        if (8 - ch[0] + i) != 0 or (8 - ch[1] - j) != 8:
            if row[0] == ch[0]+i:
                print("NO")
                exit()
            if row[1] == ch[1]-j:
                print("NO")
                exit()
            i += i
            j += j
    i = 0
    j = 0
    for ch in tempmass:
        if (8 - ch[0] - i) != 8 or (8 - ch[1] + j) != 0:
            if row[0] == ch[0]-i:
                print("NO")
                exit()
            if row[1] == ch[1]+j:
                print("NO")
                exit()
            i += i
            j += j






for row in mass:
     horizontal(mass, row) # проверка горизонталей и вертикалей
     diagonal(mass, row) #проверка диагоналей
print("YES")